#!/bin/bash
export IMAGIC_BATCH=1
###process_serialEM_montage.sh  Copyright (C) 2014  Grigory Sharov
###This program comes with ABSOLUTELY NO WARRANTY.
###This is free software, and you are welcome to redistribute it
###under GNU GENERAL PUBLIC LICENSE Version 3.

echo -e "Batch to process SerialEM mrc stacks: create a stack of tiff raw data and a stack of power spectrums\n"
#source your EMAN2 bashrc file here!
source ~/eman21.rc # EMAN2.1-beta
######################################
UpperThres=7
LowerThres=0
mkdir power 2>/dev/null
mkdir raw 2>/dev/null
docfile=`ls -l *.mdoc | head -1 | awk '{print $9}'`
if cat $docfile | grep "SerialEM: Digitized by Gatan Camera on TF20" &> /dev/null
then
mag=`cat $docfile  | grep "Magnification" | uniq | sed -e 's/[^0-9]*//g'`
case "$mag" in
"25000" )
PixSize=4.27
;;
"29000" )
PixSize=3.65
;;
"50000" )
PixSize=2.12
;;
"62000" )
PixSize=1.71
esac
echo -en "Acceleration voltage [200]: "
read acc
: acc=${acc:=200}
echo -en "Pixel spacing (uncoarsened!) [${PixSize}]: "
read PS
: PS=${PS:=$PixSize}
echo -en "Coarsening factor [4]: "
read CO
[ $((CO%2)) -eq 0 ] || ( echo "This value should be even!" && exit 1 )
: CO=${CO:=4}
COPS=`echo "scale=3;$PS*$CO" | bc`
echo -n "Put a mask on power spectrum up to first zero (A): [20]"
read RES
: RES=${RES:=20}
rad=`echo "scale=2;${COPS}*2/${RES}" | bc`
else
echo "It is not a SerialEM mdoc file!" && exit 1
fi
echo "`date`
Pixel size (uncoarsened) was: $PS
Coarsening factor was: $CO
Micrographs converted:" > output.log
### Converting mrc SerialEM stacks to tiff files and renaming them to img*.tif ###
for i in `ls *.mrc | sed -e "s/.mrc//g"`
do
	if [ ! -e "${i}.mrc.mdoc" ]
		then
		echo "No corresponding mdoc file found for ${i}.mrc!" && exit 1
	fi
	echo -en "Writing tif images...\r"
	e2proc2d.py ${i}.mrc raw/${i}.tif --unstacking --threed2twod &> /dev/null
done
echo -en "Writing tif images..DONE!\n"
count=1
echo -en "Renaming tif images.\r"
for i in `ls raw/*.tif`
do
	mv ${i} raw/img${count}.tif
	((count++))
	echo -en "Renaming tif images\r"
done
echo -en "Renaming tif images..DONE!\n"
### Start processing of tif files in raw directory ###
num=`ls raw/img*.tif | wc -l | awk '{print $1}'`
count2=1
for a in `ls raw/img*.tif | sed -e 's/raw\///g;s/.tif//g'`
do
echo ${a}.tif >> output.log
if [ "$CO" != "1" ]
then
echo -ne "Normalizing, coarsing and calculating power spectrum: ${count2} of ${num}\r"
e2proc2d.py raw/${a}.tif power/pow-stack.img --process=normalize.edgemean --process=threshold.clampminmax.nsigma:nsigma=4 --medianshrink ${CO} --process=math.realtofft >> output.log 2>&1
((count2++))
else
echo -ne "Normalizing and calculating power spectrum: ${count2} of ${num}\r"
e2proc2d.py raw/${a}.tif power/pow-stack.img --process=normalize.edgemean --process=threshold.clampminmax.nsigma:nsigma=4 --process=math.realtofft >> output.log 2>&1
((count2++))
fi
done
echo -en "\nMasking power spectrums.." | tee -a output.log
e2proc2d.py power/pow-stack.img power/pow-stack-t.img --process=threshold.clampminmax:maxval=${UpperThres}:minval=${LowerThres} --process=normalize.edgemean >> output.log
size=`e2iminfo.py power/pow-stack.img | grep "in IMAGIC format" | awk '{print $7}'`
rad2=`echo "scale=2;${rad}*${size}" | bc | cut -d'.' -f1`
e2proc2d.py power/pow-stack-t.img power/pow-stack-t-masked.img --process=mask.soft:inner_radius=${rad2} --process=normalize.edgemean >> output.log
echo "DONE!"
echo "There are three stacks of power spectrums (pixel size is ${COPS}): pow-stack, pow-stack-t (thresholded) and pow-stack-t-masked (thresholded and masked up to ${RES}A)"
